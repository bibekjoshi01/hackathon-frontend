# Generated by Django 4.2 on 2024-12-23 11:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ParkingSpot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created date",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="date updated"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this object should be treated as active. Unselect this instead of deleting instances.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_archived",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this object should be treated as delected. Unselect this instead of deleting instances.",
                        verbose_name="archived",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("cover_image", models.ImageField(null=True, upload_to="parking_spot")),
                ("description", models.TextField()),
                ("address", models.CharField(blank=True, max_length=500)),
                ("postcode", models.CharField(max_length=20)),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                ("rate_per_hour", models.DecimalField(decimal_places=2, max_digits=10)),
                ("rate_per_day", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="parking_spots",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ParkingSpotVehicleCapacity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("SMALL", "Small Car"),
                            ("MEDIUM", "Medium Car"),
                            ("SUV", "Large Car (SUV)"),
                            ("BIKE", "Bike"),
                            ("TRUCK", "Truck"),
                            ("MINIBUS", "Minibus"),
                            ("VAN", "Van"),
                        ],
                        max_length=100,
                    ),
                ),
                ("capacity", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles_capacity",
                        to="parking_spot.parkingspot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParkingSpotReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.PositiveIntegerField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="parking_spot.parkingspot",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParkingSpotFeatures",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feature",
                    models.CharField(
                        choices=[
                            ("CCTV", "CCTV"),
                            ("EV_CHARGING", "EV Charging"),
                            ("SECURITY_LIGHTING", "Security Lighting"),
                            ("HANDICAP_ACCESSIBLE", "Handicap Accessible"),
                            ("COVERED", "Covered Parking"),
                            ("GUARDS", "Security Guards"),
                        ],
                        max_length=100,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="features",
                        to="parking_spot.parkingspot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("booking_no", models.CharField(help_text="booking no", max_length=50)),
                (
                    "start_time",
                    models.DateTimeField(help_text="Start time for booking"),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, help_text="End time for booking", null=True
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, help_text="Booking amount", max_digits=10
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[("paid", "Paid"), ("unpaid", "Unpaid")],
                        default="unpaid",
                        max_length=20,
                    ),
                ),
                (
                    "vehicle_no",
                    models.CharField(
                        help_text="registeration no of vehicle", max_length=50
                    ),
                ),
                (
                    "vehicle",
                    models.CharField(
                        choices=[
                            ("SMALL", "Small Car"),
                            ("MEDIUM", "Medium Car"),
                            ("SUV", "Large Car (SUV)"),
                            ("BIKE", "Bike"),
                            ("TRUCK", "Truck"),
                            ("MINIBUS", "Minibus"),
                            ("VAN", "Van"),
                        ],
                        max_length=100,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="parking_spot.parkingspot",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ParkingSpotAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("MON", "Monday"),
                            ("TUE", "Tuesday"),
                            ("WED", "Wednesday"),
                            ("THU", "Thursday"),
                            ("FRI", "Friday"),
                            ("SAT", "Saturday"),
                            ("SUN", "Sunday"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        help_text="Start time for availability (HH:MM:SS)"
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(help_text="End time for availability (HH:MM:SS)"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parking_spot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="parking_spot.parkingspot",
                    ),
                ),
            ],
            options={
                "ordering": ["day", "start_time"],
                "unique_together": {("day", "parking_spot")},
            },
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["parking_spot"], name="parking_spo_parking_ade0a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["start_time"], name="parking_spo_start_t_297828_idx"
            ),
        ),
    ]
